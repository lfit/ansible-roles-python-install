---
- name: Include distro specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - '{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml'
    - '{{ ansible_distribution }}.yml'
    - '{{ ansible_os_family }}.yml'

- name: Install Python
  ansible.builtin.package:
    name: '{{ python_packages }}'
    state: present
  become: true

- name: Pre-set python versions required for pyenv global command
  block:
    - name: "Set Python version on Ubuntu >= 18.04 or CentOS 7"
      ansible.builtin.set_fact:
        pyenv_cmd: "{{ python_versions | join(' ') }}"
      when:
        - (ansible_distribution == 'Ubuntu' and ansible_distribution_version >= '18.04') or
          (ansible_distribution == 'CentOS')

    - name: "Set Python 3.10 on CentOS >= 8 or on Ubuntu >= 18/04"
      ansible.builtin.set_fact:
        pyenv_cmd: "{{ (python_versions | join(' ')) ~ ' ' ~ python310_version ~ ' ' ~ python311_version }}"
      when:
        - (ansible_distribution == 'Ubuntu' and ansible_distribution_version >= '18.04') or
          (ansible_distribution == 'CentOS' and ansible_distribution_major_version >= '8')

# Ref: https://github.com/pyenv/pyenv/issues/950
# ERROR: The Python ssl extension was not compiled. Missing the OpenSSL lib?
# The compat-openssl libs are available only for CentOS8, so python 3.10x will
# be available for >= CentOS8
- name: Install SSL dependencies required pyenv for python 3.10.x
  become: true
  block:
    - name: Update SSL dependencies for CentOS  # noqa no-changed-when
      ansible.builtin.command: "dnf install compat-openssl10* -y"
      when: ansible_distribution == 'CentOS' and ansible_distribution_major_version >= '8'

- name: Install Python 3.x versions via pyenv
  become: true
  environment:
    PYENV_ROOT: /opt/pyenv
    PATH: '/opt/pyenv/bin:{{ ansible_env.PATH }}'
    PYTHON38_VERSION: '{{ python38_version }}'
    PYTHON39_VERSION: '{{ python39_version }}'
    PYTHON310_VERSION: '{{ python310_version }}'
    PYTHON311_VERSION: '{{ python311_version }}'
  block:
    - name: 'Install pyenv {{ pyenv_version }}'
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv.git
        dest: /opt/pyenv
        version: '{{ pyenv_version }}'
    - name: 'Install Python {{ pyenv_cmd }}'  # noqa no-changed-when
      ansible.builtin.command: 'pyenv install -s {{ item }}'
      loop: '{{ python_versions }}'
    - name: 'Install Python {{ python310_version }}'  # noqa no-changed-when
      ansible.builtin.command: pyenv install -s {{ python310_version }}
      when:
        - (ansible_distribution == 'Ubuntu' and ansible_distribution_version >= '18.04') or
          (ansible_distribution == 'CentOS' and ansible_distribution_major_version >= '8')
    - name: 'Install Python {{ python311_version }}'  # noqa no-changed-when
      ansible.builtin.command: pyenv install -s {{ python311_version }}
      when:
        - (ansible_distribution == 'Ubuntu' and ansible_distribution_version >= '18.04') or
          (ansible_distribution == 'CentOS' and ansible_distribution_major_version >= '8')
    - name: 'Set the required python 3.x versions using pyenv on Ubuntu'  # noqa no-changed-when
      ansible.builtin.command: 'pyenv global system {{ pyenv_cmd }}'
      when: ansible_distribution == 'Ubuntu'
    - name: 'Set the required python 3.x versions using pyenv on CentOS'  # noqa no-changed-when
      ansible.builtin.command: 'pyenv global {{ pyenv_cmd }}'
      when: ansible_distribution == 'CentOS'
